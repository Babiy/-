%%Полиномиальная интерполяция (является более точной).
clc; close all; clear all;             
a=0.5; % задаем начало интервала.
b=22; % задаем конец интервала.
x=[-3 -2 0 1 5 9 12 17 22 23 24 25]; % задаем значение x
y=[12 1 0 -4 -5 -16 3 12 6 0 -2 12];
N=length(x); % определяем количество точек.
xx=linspace(min(x),max(x),100); % формируем линейный массив размера 1x100 от минимального к максимальному.
% Создаем матрицу степеней х
for i=1:N 
    for j=1:N
        A(i,j)=x(i)^(N-j); % находим элемент матрицы по формуле.
    end
end
B=y'; % вектор столбец правой части.
P=A\B; % считаем коэффициенты многочлена.
yy=polyval(P,xx); % вычисляем функцию в новых точках.

%% Выводим график узлов интерполяции
figure 
plot(x,y,'or');
axis tight
legend('Узлы интреполяции')
xlabel('x') % подписываем ось x.
ylabel('y') % подписываем ось y.
%% Выводим график интерполянты и узлов интерполяции
figure 
plot(xx,yy,'g',x,y,'or'); % вывод узлов интерполяции, исходной функции и графика полинома (интерполянты). 
axis tight % устанавливаем диапазоны координат по осям в соответствии с диапазонами изменения данных.
legend('Интерполянта','Узлы интерполяции')
xlabel('x') % подписываем ось x.
ylabel('y') % подписываем ось y. 
%% Выводим график интерполянты с интервалом.
figure
plot(xx,yy,'g',x,y,'or');  % выводим в графическом виде интерполянту в интервале [a b].
xlim([a b])







